
II/ Test d'architecture
    But : Proposer une solution à un problème de scalabilité.

    Contraintes :
         DataDome héberge sa solution de détection temps réel chez Online.net sur des serveurs dédiés, cette détection en temps réel stateless est appelée via le DNS api-datadome.co par les modules DataDome installés chez ses clients.
api-datadome.co est ouvert sur les ports 8443 (TCP sécurisé) pour le module HAProxy et 443(HTTPS) pour le reste des modules (apache, nginx, IIS...).
        Les appels au DNS api-datadome.co redirigent vers les 12 serveurs d'API exposés via des IPs publiques.
         Pour l'exercice, on suppose que nos serveurs sont actuellement uniquement déployés chez Online.net.

     Questions :
         1) Nos clients ont besoin de laisser passer le trafic à destination de nos serveurs (api.datadome.co), quelle est la meilleure façon de traiter ce besoin ? Quels seraient les impacts sur notre architecture physique ?

Les apis de data dome étant sécurisées, le client peut whitelister librement les apis sans crainte. 

         2) Un nouveau client va mettre en place notre solution sur ses serveurs. Ce client engendre un trafic, très variable dans le temps, de 20K hits par secondes en moyenne (soit 50% de notre trafic supposé actuel). Que mettre en place pour assurer le bon traitement de ce trafic, sans perte de qualité de service sur nos clients actuels et en assurant une fiabilité optimale ?

Si l'entreprise a des fonds à dépenser, migrer votre infrastructure sur du k8s qui vous offrira toute la scalabilite horizontale demandée. Si ce n'est pas le cas, une solution serait de brider le nombres d'appels possible du gros client en mettant un limitation-rate, ou bien de lui demander d'étaler ses appels dans le temps.

III/ NORDVpn
La cle prive du certificat ssl de NORDVpn a fuité, et un groupe s'est fait passé pour NORDVpn et à ainsi vole beaucoup de données utilisateurs

IV/ Questions systèmes

    1) Citez les codes HTTP que vous connaissez et expliquez ce qu'ils représentent
1xx : En attente de traitement supplementaire
200 : requete recue
2xx : Requête bien traitée
301 : redirection permanente, les ressources sont à une nouvelle adresse
404 : Page Not Found (problème côté utilisateur)
405 : Method Not Allowed 
502 : Bad Gateway 
5xx : problèmes côté serveur

    2) Citez quelques commandes linux pour diagnostiquer l'état de santé d'un serveur (espace disque, utilisation cpu...)
Top, lsof, netstat, ps, tcpdump, iostat, ldd, vmstat

    3) Citez quelques serveur web/proxy du marché
nginx, apache, nodejs, lighttpd

    4) Citez les méthodes HTTP que vous connaissez
POST GET DELETE PUT CONNECT PATCH

    5) Quel protocole est utilisé par Ansible pour déployer sa configuration
ssh

    6) Qu'est ce que l'iowait sur un serveur linux? Comment le mesure t-on, avec quel outil?
C'est le temps d'attente du cpu avant de lancer un process I/O.
outils : iostat -x

    7) DNS: quelle est la différence entre un record de type A et un type CNAME?
Les CNAME font des liens entre des noms de domaines entre eux tandis que les A relient un nom de domaine à une ip.